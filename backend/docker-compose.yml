version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: suraksha_postgres
    environment:
      POSTGRES_DB: suraksha
      POSTGRES_USER: suraksha_user
      POSTGRES_PASSWORD: suraksha_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - suraksha_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U suraksha_user -d suraksha"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: suraksha_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - suraksha_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: suraksha_backend
    environment:
      - DATABASE_URL=postgresql://suraksha_user:suraksha_pass@postgres:5432/suraksha
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-here-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - ADMIN_EMAIL=admin@suraksha.com
      - ADMIN_PASSWORD=admin123
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - suraksha_network
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        alembic upgrade head &&
        echo 'Starting FastAPI server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Celery Worker (for background tasks)
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: suraksha_celery_worker
    environment:
      - DATABASE_URL=postgresql://suraksha_user:suraksha_pass@postgres:5432/suraksha
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-here-change-in-production
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    volumes:
      - ./app:/app/app
    depends_on:
      - postgres
      - redis
      - backend
    networks:
      - suraksha_network
    restart: unless-stopped
    command: celery -A app.core.celery_app worker --loglevel=info

  # Celery Beat (for scheduled tasks)
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: suraksha_celery_beat
    environment:
      - DATABASE_URL=postgresql://suraksha_user:suraksha_pass@postgres:5432/suraksha
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-here-change-in-production
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    volumes:
      - ./app:/app/app
    depends_on:
      - postgres
      - redis
      - backend
    networks:
      - suraksha_network
    restart: unless-stopped
    command: celery -A app.core.celery_app beat --loglevel=info

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  suraksha_network:
    driver: bridge